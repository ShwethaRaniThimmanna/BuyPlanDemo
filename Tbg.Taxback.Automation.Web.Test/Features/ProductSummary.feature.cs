// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tbg.Taxback.Automation.Web.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ProductSummaryFunctionalitiesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ProductSummary.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ProductSummary functionalities", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ProductSummary functionalities")))
            {
                global::Tbg.Taxback.Automation.Web.Test.Features.ProductSummaryFunctionalitiesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that \'Product Nbr\' search lists all the products matching the Product Nbr " +
            "value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-2994")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatProductNbrSearchListsAllTheProductsMatchingTheProductNbrValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that \'Product Nbr\' search lists all the products matching the Product Nbr " +
                    "value entered", new string[] {
                        "mytag",
                        "BP-2994",
                        "ProductSummary"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table1.AddRow(new string[] {
                        "jul"});
#line 10
 testRunner.And("I enter SampleText into ProductNumber text field", ((string)(null)), table1, "And ");
#line 13
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table2.AddRow(new string[] {
                        "jul"});
#line 15
 testRunner.And("I verify that ProductNumber results matches the search criteria", ((string)(null)), table2, "And ");
#line 20
 testRunner.And("I clear ProductNumber text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table3.AddRow(new string[] {
                        "zzz"});
#line 21
 testRunner.And("I enter SampleText into ProductNumber text field", ((string)(null)), table3, "And ");
#line 24
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that \'Family\' search lists all the products matching the Family value ente" +
            "red")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-2995")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatFamilySearchListsAllTheProductsMatchingTheFamilyValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that \'Family\' search lists all the products matching the Family value ente" +
                    "red", new string[] {
                        "mytag",
                        "BP-2995",
                        "ProductSummary"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table4.AddRow(new string[] {
                        "SETS"});
#line 35
 testRunner.And("I enter SampleText into FamilySearch text field", ((string)(null)), table4, "And ");
#line 38
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table5.AddRow(new string[] {
                        "SETS"});
#line 40
 testRunner.And("I verify that Family results matches the search criteria", ((string)(null)), table5, "And ");
#line 45
 testRunner.And("I clear FamilySearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table6.AddRow(new string[] {
                        "zzz"});
#line 46
 testRunner.And("I enter SampleText into FamilySearch text field", ((string)(null)), table6, "And ");
#line 49
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Class’ search lists all the products matching the Class value entere" +
            "d")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-2999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatClassSearchListsAllTheProductsMatchingTheClassValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Class’ search lists all the products matching the Class value entere" +
                    "d", new string[] {
                        "mytag",
                        "BP-2999",
                        "ProductSummary"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table7.AddRow(new string[] {
                        "WOOL"});
#line 60
 testRunner.And("I enter SampleText into ClassSearch text field", ((string)(null)), table7, "And ");
#line 63
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table8.AddRow(new string[] {
                        "WOOL"});
#line 65
 testRunner.And("I verify that Class results matches the search criteria", ((string)(null)), table8, "And ");
#line 70
 testRunner.And("I clear ClassSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table9.AddRow(new string[] {
                        "zzz"});
#line 71
 testRunner.And("I enter SampleText into ClassSearch text field", ((string)(null)), table9, "And ");
#line 74
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Seasonality’ search lists all the products matching the Seasonality " +
            "value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatSeasonalitySearchListsAllTheProductsMatchingTheSeasonalityValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Seasonality’ search lists all the products matching the Seasonality " +
                    "value entered", new string[] {
                        "mytag",
                        "BP-3000",
                        "ProductSummary"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table10.AddRow(new string[] {
                        "winter"});
#line 85
 testRunner.And("I enter SampleText into SeasonalitySearch text field", ((string)(null)), table10, "And ");
#line 88
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table11.AddRow(new string[] {
                        "winter"});
#line 90
 testRunner.And("I verify that Seasonality results matches the search criteria", ((string)(null)), table11, "And ");
#line 95
 testRunner.And("I clear SeasonalitySearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table12.AddRow(new string[] {
                        "zzz"});
#line 96
 testRunner.And("I enter SampleText into SeasonalitySearch text field", ((string)(null)), table12, "And ");
#line 99
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Kmart Style ID’ search lists all the products matching the KmartStyl" +
            "eID value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatKmartStyleIDSearchListsAllTheProductsMatchingTheKmartStyleIDValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Kmart Style ID’ search lists all the products matching the KmartStyl" +
                    "eID value entered", new string[] {
                        "mytag",
                        "BP-3001",
                        "ProductSummary"});
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And("I enter \"34589\" into KmartStyleIDSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.And("I verify that KmartStyleID search results matches \"34589\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I clear KmartStyleIDSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("I enter \"0000\" into KmartStyleIDSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Product Description’ search lists all the products matching the Prod" +
            "uctDescription value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3002")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatProductDescriptionSearchListsAllTheProductsMatchingTheProductDescriptionValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Product Description’ search lists all the products matching the Prod" +
                    "uctDescription value entered", new string[] {
                        "mytag",
                        "BP-3002",
                        "ProductSummary"});
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table13.AddRow(new string[] {
                        "Dress"});
#line 129
 testRunner.And("I enter SampleText into ProductDescriptionSearch text field", ((string)(null)), table13, "And ");
#line 132
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table14.AddRow(new string[] {
                        "Dress"});
#line 134
 testRunner.And("I verify that ProductDescription results matches the search criteria", ((string)(null)), table14, "And ");
#line 139
 testRunner.And("I clear ProductDescriptionSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table15.AddRow(new string[] {
                        "zzz"});
#line 140
 testRunner.And("I enter SampleText into ProductDescriptionSearch text field", ((string)(null)), table15, "And ");
#line 143
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Primary Colour’ search lists all the products matching the PrimaryCo" +
            "lour value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatPrimaryColourSearchListsAllTheProductsMatchingThePrimaryColourValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Primary Colour’ search lists all the products matching the PrimaryCo" +
                    "lour value entered", new string[] {
                        "mytag",
                        "BP-3003",
                        "ProductSummary"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 150
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table16.AddRow(new string[] {
                        "purple"});
#line 154
 testRunner.And("I enter SampleText into PrimaryColourSearch text field", ((string)(null)), table16, "And ");
#line 157
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table17.AddRow(new string[] {
                        "purple"});
#line 159
 testRunner.And("I verify that PrimaryColour results matches the search criteria", ((string)(null)), table17, "And ");
#line 164
 testRunner.And("I clear PrimaryColourSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table18.AddRow(new string[] {
                        "zzz"});
#line 165
 testRunner.And("I enter SampleText into PrimaryColourSearch text field", ((string)(null)), table18, "And ");
#line 168
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Secondary Colour’ search lists all the products matching the Seconda" +
            "ryColour value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3004")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatSecondaryColourSearchListsAllTheProductsMatchingTheSecondaryColourValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Secondary Colour’ search lists all the products matching the Seconda" +
                    "ryColour value entered", new string[] {
                        "mytag",
                        "BP-3004",
                        "ProductSummary"});
#line 174
this.ScenarioSetup(scenarioInfo);
#line 175
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table19.AddRow(new string[] {
                        "purple"});
#line 179
 testRunner.And("I enter SampleText into SecondaryColourSearch text field", ((string)(null)), table19, "And ");
#line 182
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table20.AddRow(new string[] {
                        "purple"});
#line 184
 testRunner.And("I verify that SecondaryColour results matches the search criteria", ((string)(null)), table20, "And ");
#line 189
 testRunner.And("I clear SecondaryColourSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table21.AddRow(new string[] {
                        "zzz"});
#line 190
 testRunner.And("I enter SampleText into SecondaryColourSearch text field", ((string)(null)), table21, "And ");
#line 193
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Secondary Colour Long’ search lists all the products matching the Se" +
            "condaryColourLong value entered")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3005")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatSecondaryColourLongSearchListsAllTheProductsMatchingTheSecondaryColourLongValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Secondary Colour Long’ search lists all the products matching the Se" +
                    "condaryColourLong value entered", new string[] {
                        "mytag",
                        "BP-3005",
                        "ProductSummary"});
#line 199
this.ScenarioSetup(scenarioInfo);
#line 200
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("I clear SecondaryColourLongSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table22.AddRow(new string[] {
                        "zzz"});
#line 206
 testRunner.And("I enter SampleText into SecondaryColourLongSearch text field", ((string)(null)), table22, "And ");
#line 209
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verify that ‘Vendor’ search lists all the products matching the Vendor value ente" +
            "red")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProductSummary functionalities")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BP-3006")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ProductSummary")]
        public virtual void VerifyThatVendorSearchListsAllTheProductsMatchingTheVendorValueEntered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that ‘Vendor’ search lists all the products matching the Vendor value ente" +
                    "red", new string[] {
                        "mytag",
                        "BP-3006",
                        "ProductSummary"});
#line 215
this.ScenarioSetup(scenarioInfo);
#line 216
 testRunner.Given("I Login to BuyPlanApplication as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
 testRunner.And("I navigate to ProductSummary page as Planner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I click on halfYear link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table23.AddRow(new string[] {
                        "Sheen"});
#line 220
 testRunner.And("I enter SampleText into VendorSearch text field", ((string)(null)), table23, "And ");
#line 223
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table24.AddRow(new string[] {
                        "Sheen"});
#line 225
 testRunner.And("I verify that Vendor results matches the search criteria", ((string)(null)), table24, "And ");
#line 230
 testRunner.And("I clear VendorSearch text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "SampleText"});
            table25.AddRow(new string[] {
                        "zzz"});
#line 231
 testRunner.And("I enter SampleText into VendorSearch text field", ((string)(null)), table25, "And ");
#line 234
 testRunner.And("I click on search link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.And("I wait till BuyPlan loads", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.And("I verify that NoRecordFound contains text \"No matching records found\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.And("I close the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.And("I click on MovePlannedDropDcDueDate link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

